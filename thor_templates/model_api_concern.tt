module Api::<%= @model_name %>
    extend ActiveSupport::Concern

    included do
        # Use @@json_attrs to drive json rendering for 
        # API model responses (index, show and update ones).
        # For reference:
        # https://api.rubyonrails.org/classes/ActiveModel/Serializers/JSON.html
        # The object passed accepts only these keys:
        # - only: list [] of model fields to be shown in JSON serialization
        # - except: exclude these fields from the JSON serialization, is a list []
        # - methods: include the result of some method defined in the model
        # - include: include associated models, it's an object {} which also accepts the keys described here
        cattr_accessor :json_attrs
        @@json_attrs = nil

        # Here you can add custom actions to be called from the API
        # The action must return an serializable (JSON) object.
        # Here you can find an example, in the API could be called like:
        # GET /api/v1/:controller/:id/test?parameter=sample
        # Please uncomment it to test with a REST client:
        # def self.test id=nil, params=nil
        #     { test: [ :first, :second, :third ], id: id, params: params}
        # end
    end
end
